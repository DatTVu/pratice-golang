[{"G:\\pratice-golang\\react_app\\src\\index.js":"1","G:\\pratice-golang\\react_app\\src\\reportWebVitals.js":"2","G:\\pratice-golang\\react_app\\src\\App.js":"3","G:\\pratice-golang\\react_app\\src\\components\\counter.jsx":"4","G:\\pratice-golang\\react_app\\src\\components\\counters.jsx":"5","G:\\pratice-golang\\react_app\\src\\components\\navbar.jsx":"6"},{"size":543,"mtime":1609656517347,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1545,"mtime":1609658329980,"results":"10","hashOfConfig":"8"},{"size":1254,"mtime":1609658773375,"results":"11","hashOfConfig":"8"},{"size":624,"mtime":1609658046769,"results":"12","hashOfConfig":"8"},{"size":483,"mtime":1609658060663,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"l4e9lq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"G:\\pratice-golang\\react_app\\src\\index.js",[],["29","30"],"G:\\pratice-golang\\react_app\\src\\reportWebVitals.js",[],"G:\\pratice-golang\\react_app\\src\\App.js",["31"],"import React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport './App.css';\nimport { render } from '@testing-library/react';\n\nclass App extends Component{\n  state = {\n    counters: [\n      { id: 1, value: 0 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor(){\n    super();\n    console.log('App - Construtor');\n  }\n\n  componentDidMount(){\n    console.log('App - Mounted');\n    \n  }\n\n  handleIncrement = (counter) => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  render(){\n    console.log('App - Rendered');\n    return (\n      <React.Fragment>\n        <NavBar totalCounters={this.state.counters.filter(c => c.value >0).length}/>\n        <main className=\"container\">\n          <Counters \n            counters={this.state.counters}\n            onReset={this.handleReset} \n            onIncrement={this.handleIncrement} \n            onDelete={this.handleDelete} \n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","G:\\pratice-golang\\react_app\\src\\components\\counter.jsx",[],"G:\\pratice-golang\\react_app\\src\\components\\counters.jsx",[],"G:\\pratice-golang\\react_app\\src\\components\\navbar.jsx",["32","33"],"import React, { Component } from \"react\";\r\n\r\n// Stateless Functional Component\r\nconst NavBar = ({ totalCounters }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Navbar{\" \"}\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {totalCounters}\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":5,"column":10,"nodeType":"40","messageId":"41","endLine":5,"endColumn":16},{"ruleId":"38","severity":1,"message":"42","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"44","line":8,"column":9,"nodeType":"45","endLine":8,"endColumn":46},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]